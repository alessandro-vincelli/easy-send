<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                           http://www.springframework.org/schema/security 
                           http://www.springframework.org/schema/security/spring-security-3.1.xsd
                           http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
                           ">

    <context:annotation-config />
    <context:spring-configured />
    <context:component-scan base-package="it.av.es.web.rest" />
    <tx:jta-transaction-manager />
    <tx:annotation-driven transaction-manager="transactionManager" />
    <cache:annotation-driven  mode="proxy" proxy-target-class="true"/>
    
    <import resource="cache-manager.xml" />
    
    <bean id="passwordEncoder"  class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"></bean>
    
    <bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
        <property name="locations">
            <list>
                <value>${springPropertiesLocation}</value>
            </list>
        </property>
    </bean>
    
<!--     <security:http auto-config="true">
        <security:intercept-url pattern="/**"/>
    </security:http> -->
    
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg>    
            <list>
                <ref local="daoAuthenticationProvider" />
            </list>
        </constructor-arg>
    </bean>
        
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService"></security:authentication-provider>
    </security:authentication-manager>

    <security:global-method-security secured-annotations="enabled" />
        
    <bean id="dataSourceMain" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">

        <property name="driverClass" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="" />
        <property name="user" value="" />
        <property name="password" value="" />

        <property name="initialPoolSize" value="3" />
        <property name="minPoolSize" value="3" />
        <property name="maxPoolSize" value="200" />
        <!-- <property name="timeout"><value>0</value></property> -->   <!-- 0 means: no timeout -->
        <property name="idleConnectionTestPeriod" value="200" />
        <property name="acquireIncrement" value="1" />
        <property name="maxStatements" value="0" />  <!-- 0 means: statement caching is turned off. -->
        <property name="numHelperThreads" value="3" />  <!-- 3 is default -->

    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="easyTrackPersistence" />
        <property name="persistenceXmlLocation" value="" />
        <property name="dataSource" ref="dataSourceMain"/>
    </bean>

    <!--
        PostProcessors to perform resource injection according to the JPA specification (@PersistenceContext,
        @PersistenceUnit).
    -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <!-- turn on @Required annotation checks -->
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

    <!--
        PostProcessors to perform exception translation on @Repository classes (from native exceptions such as JPA
        PersistenceExceptions to Spring's DataAccessException hierarchy).
    -->
    <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="nestedTransactionAllowed" value="false"></property>
    </bean>

    <bean id="userDetailsService" class="it.av.es.web.security.UserDetailsServiceImpl" scope="prototype">
        <property name="service" ref="userService" />
    </bean>

    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService" />
        <property name="passwordEncoder" ref="passwordEncoder" />
        <property name="saltSource">
            <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
                <property name="userPropertyToUse" value="passwordSalt"></property>
            </bean>
        </property>
    </bean>

    <bean id="languageService" class="it.av.es.service.impl.LanguageServiceHibernate"></bean>
    
    <bean id="userProfileService" class="it.av.es.service.impl.UserProfileServiceHibernate"/>
    
    <bean id="userService" class="it.av.es.service.impl.UserServiceHibernate"/>
    
    <bean id="projectService" class="it.av.es.service.impl.ProjectServiceHibernate"/>
    
    <bean id="orderService" class="it.av.es.service.impl.OrderServiceHibernate">
        <property name="notificationEnabled" value="false"/>
    </bean>
    
    <bean id="productService" class="it.av.es.service.impl.ProductServiceHibernate"/>
    
    <bean id="customerService" class="it.av.es.service.impl.CustomerServiceHibernate"/>
    
    <bean id="cityService" class="it.av.es.service.impl.CityServiceHibernate"/>
    
    <bean id="cittaService" class="it.av.es.service.impl.CittaServiceHibernate"/>
    
    <bean id="countryService" class="it.av.es.service.impl.CountryServiceHibernate"/>
    
    <bean id="provinciaService" class="it.av.es.service.impl.ProvinciaServiceHibernate"/>
    
    <bean id="priceService" class="it.av.es.service.impl.PriceServiceHibernate"/>
    
    <bean id="groupService" class="it.av.es.service.impl.GroupServiceHibernate"/>
    
    <bean id="wicketApplication" class="it.av.es.web.WicketApplication"/>

    <bean id="notificationTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="no-reply@easytrack.eurocargo.com" />
    </bean>

    <bean id="prepareMessage" class="it.av.es.service.system.PrepareMessage"/>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:it/av/es/web/WicketApplication" />
        <property name="fallbackToSystemLocale" value="true" />
        <property name="cacheSeconds" value="-1" />
    </bean>

    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="127.0.0.1" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="mailService" class="it.av.es.service.system.MailServiceImpl" />

</beans>